sequenceDiagram
    participant Admin as Admin
    participant API as API
    participant DB as Database

    %% Admin logs in (expected)
    Admin->>API: POST /admins/login
    API->>DB: Verify Admin credentials
    DB->>API: Return 200 OK (verification success)
    API->>Admin: Return 200 OK (JWT Token)

    %% Admin logs in (unexpected - invalid credentials)
    Admin->>API: POST /admins/login
    API->>DB: Verify Admin credentials
    DB->>API: Return 401 Unauthorized (invalid credentials)
    API->>Admin: Return 401 Unauthorized (Unauthorized)

    %% Admin resets password (expected)
    Admin->>API: POST /admins/reset-password
    API->>DB: Validate token
    DB->>API: Return 200 OK (token validated)
    API->>DB: Update password
    DB->>API: Return 200 OK (password updated)
    API->>Admin: Return 200 OK (Password Updated)

    %% Admin resets password (unexpected - invalid token)
    Admin->>API: POST /admins/reset-password
    API->>DB: Validate token
    DB->>API: Return 400 Bad Request (invalid token)
    API->>Admin: Return 400 Bad Request (Invalid Token)

    %% Admin fetches complaint stats (expected)
    Admin->>API: GET /admins/complaint_stats
    API->>DB: Fetch complaint stats
    DB->>API: Return 200 OK (stats fetched)
    API->>Admin: Return 200 OK (Complaint Stats)

    %% Admin updates complaint (expected)
    Admin->>API: PUT /admins/update_complaint
    API->>DB: Update complaint status
    DB->>API: Return 200 OK (complaint updated)
    API->>Admin: Return 200 OK (Complaint Updated)

    %% Admin updates complaint (unexpected - invalid status)
    Admin->>API: PUT /admins/update_complaint
    API->>DB: Check if status is valid
    DB->>API: Return 400 Bad Request (invalid status)
    API->>Admin: Return 400 Bad Request (Invalid Status)

    %% Admin deletes a complaint (expected)
    Admin->>API: DELETE /admins/complaint_delete
    API->>DB: Delete complaint
    DB->>API: Return 200 OK (complaint deleted)
    API->>Admin: Return 200 OK (Complaint Deleted)

    %% Admin deletes a complaint (unexpected - complaint not found)
    Admin->>API: DELETE /admins/complaint_delete
    API->>DB: Check if complaint exists
    DB->>API: Return 404 Not Found (complaint not found)
    API->>Admin: Return 404 Not Found (Complaint Not Found)
    
    %% Admin logs out (expected)
    Admin->>API: POST /admins/logout
    API->>DB: Invalidate Admin session
    DB->>API: Return 200 OK (session invalidated)
    API->>Admin: Return 200 OK (Logged out)
