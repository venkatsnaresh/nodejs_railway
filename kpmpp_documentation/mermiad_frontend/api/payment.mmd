sequenceDiagram
    participant User as Frontend (React)
    participant Backend as Node.js (Express)
    participant DB as MySQL
    participant Payment as Razorpay
    participant Auth as User API
    participant Mail as SendMail

    User->>Backend: POST /user/login (user credentials)
    Backend->>Auth: Authenticate user (check credentials)
    Auth-->>Backend: Return auth token (status: 200 OK)
    Backend->>User: Return auth token (status: 200 OK)

    User->>Backend: POST /pay (payment request with amount)
    Backend->>Payment: Create order (amount, currency, etc.)
    Payment-->>Backend: Return order details (status: 200 OK)
    Backend->>User: Return payment order details (status: 200 OK)

    User->>Payment: Make payment (via Razorpay)
    Payment->>Backend: POST /webhook (payment confirmation)
    Backend->>Backend: Validate webhook signature
    alt Signature is valid
        Backend->>DB: Insert payment data (user_id, amount, category)
        DB-->>Backend: Success (status: 201 Created)
        
        alt Category: Subscription
            Backend->>DB: Insert subscription data (plan, expiring_on, status)
            DB-->>Backend: Subscription inserted (status: 201 Created)
            Backend->>User: Return subscription success (status: 200 OK)
        else Category: Donation
            Backend->>DB: Insert donation data (user_id, donated_amount)
            DB-->>Backend: Donation inserted (status: 201 Created)
            Backend->>Mail: Send thank you email (user email, amount)
            Mail-->>User: Send thank you email content (status: 200 OK)
            Backend->>User: Return donation success (status: 200 OK)
        end
    else Signature is invalid
        Backend->>User: Return error (status: 400 Bad Request)
    end
